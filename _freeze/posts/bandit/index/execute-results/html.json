{
  "hash": "a8295a1105b55ad9f91a87b8bca4f786",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"OverTheWire wargames\"\ndescription: \"Personal solutions for overthewire wargames\"\ndate: today\ntoc: false\nengine: knitr\ncategories:\n  - study\n---\n\n\n\n\nIn this post, I write down my solutions for the [**OverTheWire wargames**](https://overthewire.org/wargames/). \n\n## Bandit\n\n### 0\n\nJust get used to the concept of `ssh`. `ssh` is *secure shell* which allows secured access to the remote machine from the local computer.\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nssh bandit0@bandit.labs.overthewire.org -p 2220\n\n# You will be asked to type in the password.\n```\n:::\n\n\n\n\n### 0 to 1\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# print out the file\ncat readme\n\nexit\n \nssh bandit1@bandit.labs.overthewire.org -p 2220\n\n# You will be asked to type in the password.\n```\n:::\n\n\n\n\n### 1 to 2\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Special character - . Need to specify the full location of the file. \ncat ./-\n\n```\n:::\n\n\n\n\n### 2 to 3\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# enclose the filenames using double quote, or use \\ before white space.\n\n```\n:::\n\n\n\n\n### 3 to 4\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# list all files using -a argument\nls inhere/ -a\n\n```\n:::\n\n\n\n\n### 4 to 5\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# find ASCII text files\n# -exec file {} + executes the file command to get info on the content\nfind inhere -type f -exec file {} + | grep ASCII\n\n```\n:::\n\n\n\n\n### 5 to 6\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nfind inhere -type f -size 1033c ! -executable -exec file {} + | grep ASCII\n```\n:::\n\n\n\n\n### 6 to 7\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# since we don't know where the file is, we will search from the root directory\nfind / -user bandit7 -group bandit6 -size 33c -type f 2>/dev/null -exec cat {} \\;\n\n```\n:::\n\n\n\n\n### 7 to 8\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ngrep -w \"millionth\" data.txt\n```\n:::\n\n\n\n\n### 8 to 9\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nsort data.txt | uniq -u data.txt\n```\n:::\n\n\n\n\n### 9 to 10\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nstrings data.txt | grep \"==\"\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}