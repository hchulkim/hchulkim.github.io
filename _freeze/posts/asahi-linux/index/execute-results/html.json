{
  "hash": "a8eacfc554887803f3dd9ebb96e08403",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Asahi-linux on Macbook Pro\"\ndescription: \"My first experience with asahi-linux on Macbook Pro\"\ndate: \"2025-08-02\"\ntoc: false\nengine: knitr\ncategories:\n  - software\n---\n\n## Background\n\nIf you have been following up my blog posts, you might have guessed that I am slowly transitioning to using Linux. It took a long 3-stage process to get me there. Windows, macOS, and Linux. It was mostly great, even though there were some small annoyances and hastles along the way (dependencies for installing some R packages, setting up Dropbox, etc). But there was another experiment I wanted to try out: **setting up Linux on my Macbook Pro (MBP)**. While I feel that MBP is just getting too overpriced (one of the reasons I started to transition to Linux in the first place), I still love the design and the build quality of the machine. So I decided to give it a try. But as you all know, setting up Linux on Mac is a painful and hardcore process. That's when I found out about [Asahi-linux](https://asahilinux.org/).\n\n## Asahi-linux\n\nAsahi-linux is a Linux distribution that is designed to run on Apple Silicon Macs. It is based on Fedora Linux.It is a community-driven project and is not officially supported by Apple.\n\nAnother good thing about Asahi-linux is that it is completely legal to use. It is not a hack or a jailbreak. Thus, you don't have to worry about getting your machine banned or your warranty voided. In fact, it is pretty easy to uninstall it so it shouldn't be much of an issue.\n\nIt is sort of similar to the good ol' bootcamp we used to have for Intel Macs for Linux. Basically we are setting up some partition on the disk to run Linux. \n\n## Caveats\n\nWhile Asahi-linux is amazing, it is not without its caveats. Most of it is due to the fact that it is built upon macOS.Let me write down some of them as a warning to others.\n\n- It is not officially supported by Apple. So you might not get the best support from Apple.\n- Reverse engineering is not yet fully accomplished. Some features are not yet available (USB-C display, touchid, etc).\n- It is not yet as stable as macOS. So you might encounter some issues.\n- Currently, only M1 and M2 chips are supported. If you have an older machine or newer chips, it will not work.\n- Due to ARM architecture, you cannot run x86_64 applications. So some softwares may not work in Asahi-linux.\n\n## Setting up Asahi-linux\n\n1. First, make sure your machine is compatible with Asahi-linux. You can check the [Asahi-linux website](https://asahilinux.org/fedora/#device-support) for the list of compatible machines.\n\n2. Also make sure you have enough disk space. Asahi-linux is a bit larger than macOS. You need to have at least 100GB of free space.\n\n3. Use the following command in terminal:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncurl https://alx.sh | sh\n```\n:::\n\n\n4. Follow the instructions in the terminal. It will guide you through the process of setting up Asahi-linux.[^1]\n\n[^1]: It is very important to exactly follow the instructions in the terminal. If you don't, you might end up with a broken system. e.g. I struggled a bit on my first try because I did not hold the power button until \"loading startup options...\" appeared.\n\n5. Your machine will reboot and you will see the option to boot into Asahi-linux.\n\n6. If you need to boot into macOS, turn the power off and hold the power button until \"loading startup options...\" appears. Then select \"macOS\" and press enter.\n\n7. You are all set!\n\n## Current experience\n\nFor now, I am early in the game and trying out the power of Asahi-linux. I will probably use it as my additional machine along with my ThinkPad Ubuntu machine. I will update this section as I go along.\n\n- Unlike Ubuntu, it is hard to install Dropbox. But fear not, there is a workaround. Try out [maestral](https://maestral.app/) instead. For some reason, Docker image installation option did not work for me but python version worked fine.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}